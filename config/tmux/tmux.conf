###########################
#  Configuration
###########################

# use 256 term for pretty colors
set -g default-terminal "screen-256color"

# From Nvim :checkhealth
set-option -g focus-events on
set-option -ga terminal-overrides ",xterm-256color:Tc"

# set zsh as term
set -g default-shell /bin/zsh

# increase scroll-back history
set -g history-limit 10000

# use vim key bindings
setw -g mode-keys vi

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# increase repeat time for repeatable commands
set -g repeat-time 1000

# start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# don't auto rename windows
set -g allow-rename off

# re-number windows when one is closed
set -g renumber-windows on

# mouse settings
set -g mouse on
# to enable mouse scroll, see https://github.com/tmux/tmux/issues/145#issuecomment-150736967
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# window separators
set-option -wg window-status-separator ""

# monitor window changes
set-option -wg monitor-activity on
set-option -wg monitor-bell on

###########################
#  Key Bindings
###########################

# tmux prefix
unbind C-b
set -g prefix C-Space
# Press C-a twice so C-a can behave however it needs to outside of tmux (-r so repeat presses don't require the prefix)
# bind-key -r C-a send-prefix

# Pop up list of sessions to select
bind-key C-j choose-tree

# split panes (set new pane path to that of originating pane)
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \\ split-window -h -c '#{pane_current_path}'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# Resize panes
#   Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
#   Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-S-Left resize-pane -L 10
bind -n C-S-Right resize-pane -R 10
bind -n C-S-Down resize-pane -D 5
bind -n C-S-Up resize-pane -U 5

# force a reload of the config file
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

###########################
# Status Bar
###########################

# set refresh interval for status bar
set -g status-interval 1

# increase left status length to allow for longer
set -g status-left-length 50

# set right status to more readable date and time
set -g status-right "#(date '+%a, %b %d  %I:%M')"

set -g status-justify left
set -g status-position top

###########################
# Copy / Paste
###########################
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

###########################
# Colors
# blackest: colour232
# whitest: colour255
###########################
BARBG="#caf7ca"
BARFG="#1d3528"
TABBG=$BARBG
TABFG=$BARFG
TABABG="#54d961"
TABAFG=$BARFG
PANEBG=default
PANEFG="#d2dae4"
PANEABG=default
PANEAFG=$TABABG
MSGBG="#004db3"
MSGFG="#ffffff"

set -g status-style bg=$BARBG,fg=$BARFG

set -g window-status-style         bg=$TABBG,fg=$TABFG
set -g window-status-current-style bg=$TABABG,fg=$TABAFG
set -g window-status-bell-style    bg=$BARBG,fg=$BARFG
set -g window-status-format '  #I: #W #F  '
set -g window-status-current-format '  #I: #W #F  '

set -g pane-active-border-style    bg=$PANEABG,fg=$PANEAFG
set -g pane-border-style           bg=$PANEBG,fg=$PANEFG

set -g message-style               bg=$MSGBG,fg=$MSGFG
set -g message-command-style       bg=$MSGBG,fg=$MSGFG

set -g status-left '#[bg=cyan]#[fg=colour255]#{?client_prefix,#[bg=blue]#[fg=colour255],} #S '

